# Generated by Django 3.2 on 2022-06-26 02:04

import accounts.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Kekkonreki',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kekkonreki', models.CharField(max_length=20, verbose_name='結婚歴')),
            ],
        ),
        migrations.CreateModel(
            name='Kenmei',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kenmei', models.CharField(max_length=20, verbose_name='県名')),
            ],
        ),
        migrations.CreateModel(
            name='Kodomo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kodomo', models.CharField(max_length=20, verbose_name='子供')),
            ],
        ),
        migrations.CreateModel(
            name='Nenrei',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nenrei', models.CharField(max_length=40, verbose_name='年齢')),
            ],
        ),
        migrations.CreateModel(
            name='Osake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('osake', models.CharField(max_length=40, verbose_name='お酒')),
            ],
        ),
        migrations.CreateModel(
            name='Seibetu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seibetu', models.CharField(max_length=10, verbose_name='性別')),
            ],
        ),
        migrations.CreateModel(
            name='Shokugyo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shokugyo', models.CharField(max_length=128, verbose_name='職業')),
            ],
        ),
        migrations.CreateModel(
            name='Shumi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shumi', models.CharField(max_length=128, verbose_name='趣味')),
            ],
        ),
        migrations.CreateModel(
            name='Tabako',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tabako', models.CharField(max_length=40, verbose_name='たばこ')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('nickname', models.CharField(error_messages={'unique': 'A user with that nickname already exists.'}, max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='nickname')),
                ('email', models.EmailField(max_length=254, verbose_name='email address')),
                ('date_of_birth', models.DateField()),
                ('shussin', models.CharField(blank=True, max_length=40, verbose_name='shussin')),
                ('kyojuchi', models.CharField(blank=True, max_length=40, verbose_name='self introduction')),
                ('self_introduction', models.CharField(blank=True, max_length=512, verbose_name='self introduction')),
                ('doi_flg', models.BooleanField(default=False, verbose_name='accept')),
                ('profile_photo1', models.ImageField(blank=True, null=True, upload_to='profile_photos1', verbose_name='profile photo1')),
                ('profile_photo2', models.ImageField(blank=True, null=True, upload_to='profile_photos2', verbose_name='profile photo2')),
                ('profile_photo3', models.ImageField(blank=True, null=True, upload_to='profile_photos3', verbose_name='profile photo3')),
                ('profile_photo4', models.ImageField(blank=True, null=True, upload_to='profile_photos4', verbose_name='profile photo4')),
                ('profile_photo5', models.ImageField(blank=True, null=True, upload_to='profile_photos5', verbose_name='profile photo5')),
                ('is_staff', models.BooleanField(default=True, verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('kekkonreki', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.kekkonreki', verbose_name='結婚歴')),
                ('kodomo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.kodomo', verbose_name='子供')),
                ('nenrei', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.nenrei', verbose_name='年齢')),
                ('osake', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.osake', verbose_name='お酒')),
                ('shokugyo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.shokugyo', verbose_name='職業')),
                ('shumi', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.shumi', verbose_name='趣味')),
                ('tabako', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.tabako', verbose_name='たばこ')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'users',
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', accounts.models.UserManager()),
            ],
        ),
    ]
